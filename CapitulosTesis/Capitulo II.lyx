#LyX 1.6.5 created this file. For more info see http://www.lyx.org/
\lyxformat 345
\begin_document
\begin_header
\textclass article
\use_default_options true
\language english
\inputencoding auto
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\cite_engine basic
\use_bibtopic false
\paperorientation portrait
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\defskip medskip
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\author "" 
\author "" 
\end_header

\begin_body

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
ARMAR ESQUELETO DEL CAPITULO
\end_layout

\end_inset


\end_layout

\begin_layout Section
Caso de uso
\end_layout

\begin_layout Standard
En ingeniería del software, un caso de uso es una técnica para la captura
 de requisitos potenciales de un nuevo sistema o una actualización de software.
 Cada caso de uso proporciona uno o más escenarios que indican cómo debería
 interactuar el sistema con el usuario o con otro sistema para conseguir
 un objetivo específico.
 Normalmente, en los casos de usos se evita el empleo de jergas técnicas,
 prefiriendo en su lugar un lenguaje más cercano al usuario final.
 En ocasiones, se utiliza a usuarios sin experiencia junto a los analistas
 para el desarrollo de casos de uso.
\end_layout

\begin_layout Standard
Los casos de uso se convirtieron en una de las prácticas más comunes para
 la captura de requisitos funcionales, especialmente con el desarrollo del
 paradigma de la programación orientada a objetos.
\end_layout

\begin_layout Subsection
Especificación de un requerimiento mediante casos de uso (o Aplicación)
 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ver titulo
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los casos de uso evitan típicamente la jerga técnica, prefiriendo la lengua
 del usuario final o del experto del campo del saber al que se va a aplicar.
 Los casos del uso son a menudo elaborados en colaboración por los analistas
 de requerimientos y los clientes.
 Cada caso de uso se centra en describir cómo alcanzar una única meta o
 tarea de negocio.
 
\end_layout

\begin_layout Standard
Desde una perspectiva tradicional de la ingeniería de software, un caso
 de uso describe una característica del sistema.
 Para la mayoría de proyectos de software, esto significa que quizás a veces
 es necesario especificar diez o centenares de casos de uso para definir
 completamente el nuevo sistema.
 El grado de la formalidad de un proyecto particular del software y de la
 etapa del proyecto influenciará el nivel del detalle requerido en cada
 caso de uso.
 Los casos de uso pretenden ser herramientas simples para describir el comportam
iento del software o de los sistemas.
 Un caso del uso contiene una descripción textual de todas las maneras que
 los actores previstos podrían trabajar con el software o el sistema.
 Los casos de uso no describen ninguna funcionalidad interna (oculta al
 exterior) del sistema, ni explican cómo se implementará.
 Simplemente muestran los pasos que el actor sigue para realizar una tarea.
\end_layout

\begin_layout Standard
Un caso de uso debe:
\end_layout

\begin_layout Itemize
tener un nivel apropiado del detalle;
\end_layout

\begin_layout Itemize
describir una tarea del negocio que sirva a una meta de negocio;
\end_layout

\begin_layout Itemize
ser bastante sencillo como que un desarrollador lo elabore en un único lanzamien
to.
\end_layout

\begin_layout Subsection
Ventajas 
\end_layout

\begin_layout Itemize
La técnica de caso de uso tiene éxito en sistemas interactivos, ya que expresa
 la intención que tiene el actor (su usuario) al hacer uso del sistema.
 
\end_layout

\begin_layout Itemize
Como técnica de extracción de requerimiento permite que el analista se centre
 en las necesidades del usuario, qué espera éste lograr al utilizar el sistema,
 evitando que la gente especializada en informática dirija la funcionalidad
 del nuevo sistema basándose solamente en criterios tecnológicos.
 
\end_layout

\begin_layout Itemize
A su vez, durante la extracción (elicitation en inglés), el analista se
 concentra en las tareas centrales del usuario describiendo por lo tanto
 los casos de uso que mayor valor aportan al negocio.
 Esto facilita luego la priorización del requerimiento.
\end_layout

\begin_layout Subsection
Template de Rational 
\begin_inset Note Note
status open

\begin_layout Subsubsection
revisar bien este template y explicar cada sección
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Secciones
\end_layout

\begin_layout Itemize
ID
\end_layout

\begin_layout Itemize
NOMBRE
\end_layout

\begin_layout Itemize
REFERENCIAS CRUZADAS 
\end_layout

\begin_layout Itemize
CREADO POR 
\end_layout

\begin_layout Itemize
ULTIMA ACTUALIZACION POR
\end_layout

\begin_layout Itemize
FECHA DE CREACION 
\end_layout

\begin_layout Itemize
FECHA DE ULTIMA ACTUALIZACION 
\end_layout

\begin_layout Itemize
ACTORES
\end_layout

\begin_layout Itemize
DESCRIPCION
\end_layout

\begin_layout Itemize
TRIGGER 
\end_layout

\begin_layout Itemize
PRE-CONDICION
\end_layout

\begin_layout Itemize
POST-CONDICION 
\end_layout

\begin_layout Itemize
FLUJO NORMAL 
\end_layout

\begin_layout Itemize
FLUJOS ALTERNATIVOS 
\end_layout

\begin_layout Itemize
INCLUDES 
\end_layout

\begin_layout Itemize
FRECUENCIA DE USO
\end_layout

\begin_layout Itemize
REGLAS DE NEGOCIO 
\end_layout

\begin_layout Itemize
REQUERIMIENTOS ESPECIALES
\end_layout

\begin_layout Itemize
NOTAS 
\end_layout

\begin_layout Itemize
ASUNTO
\end_layout

\begin_layout Subsection
Casos de Uso y Requerimientos No Funcionales o ATRIBUTOS DE CALIDAD 
\begin_inset Note Note
status open

\begin_layout Plain Layout
ver titulo, aca deberia introducir atributos de calidad
\end_layout

\end_inset


\end_layout

\begin_layout Standard
Los casos de uso pueden ser útiles para establecer requisitos de comportamiento,
 pero no establecen completamente los requisitos funcionales ni permiten
 determinar los requisitos no funcionales.
 Los casos de uso deben complementarse con información adicional como reglas
 de negocio, requisitos no funcionales, diccionario de datos que complementen
 los requerimientos del sistema.
 Sin embargo la ingeniería del funcionamiento especifica que cada caso crítico
 del uso debe tener un requisito no funcional centrado en el funcionamiento
 asociado.
 
\end_layout

\begin_layout Section
Atributos de Calidad
\end_layout

\end_body
\end_document
